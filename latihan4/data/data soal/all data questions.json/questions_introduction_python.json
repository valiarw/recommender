{
    "quiz": [
        {
            "question_id": 2,
            "material": "Introduction Python",
            "instruction": "Edit the following Python code such that it will print an array containing the seven days of the week.",
            "question": "days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\nfor day in days:\n    print(___)",
            "correct_answer": "day",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 11,
            "material": "Introduction Python",
            "instruction": "Generate a code snippet to print a pattern of stars in Python.",
            "question": "# Use two for loops to print pattern\nfor i in range(0, rows):\n    for j in range(0, i + 1):\n        print(\"* \", end=\"\")\n    print(___)",
            "correct_answer": "\"\\r\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 58,
            "material": "Introduction Python",
            "instruction": "Create a Python program to loop through a given list and print each item on a new line.",
            "question": "for item in my_list:\n    print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 96,
            "material": "Introduction Python",
            "instruction": "Find the most efficient Python code to print all the divisors of an input number.",
            "question": "# Python Program to find the factors of a number\n\n# define a function\ndef print_divisors(input):\n\n    # find all factors of the input number\n    for i in range(1, input + 1):\n        if input % i == 0:\n            print(___)\n\n# take input from the user\ninput = 28\n\n# print the divisors\nprint_divisors(input)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 126,
            "material": "Introduction Python",
            "instruction": "Edit this python code to make the output print in descending order (from highest to lowest).",
            "question": "my_list = [10,2,5,1,20]\n\nfor x in my_list:\n    print(___)\n    \nfor x in sorted(my_list, reverse=True):\n    print(x)",
            "correct_answer": "x",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 160,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out each word that begins with a vowel in a sentence.",
            "question": "for word in sentence.split():\n    if word[0].lower() in 'aeiou':\n        print(___)",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 183,
            "material": "Introduction Python",
            "instruction": "Using the input provided, write a Python program to print the sum of the numbers in both lists.",
            "question": "list3 = list1 + list2\n\ntotal = 0\n\nfor num in list3:\n    total += num \n\nprint(___)  # output: 29",
            "correct_answer": "total",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 275,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the factorial of a number.",
            "question": "def factorial(x):\n    factorial = 1\n    while x > 1:\n        factorial = factorial * x\n        x = x - 1\n    return factorial\n\nnumber = 7\nresult = factorial(number)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 285,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to print all the values from a list of numbers.",
            "question": "for x in mylist: \n  print(___)",
            "correct_answer": "x",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 318,
            "material": "Introduction Python",
            "instruction": "Develop a program to print all unique strings from a given array of strings",
            "question": "def unique_strings(strings):\n    unique_strings = []\n    for string in strings:\n        if string not in unique_strings:\n            unique_strings.append(string)\n    return unique_strings\n\nstrings = [\"Hello\", \"World\", \"Hello\", \"Python\"]\nresult = unique_strings(strings)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 350,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all combinations of three numbers from the given list.",
            "question": "import itertools \n  \n# initializing list \nnum_list = [1, 2, 3, 4] \n  \n# printing all possible combinations \nresult = itertools.combinations(num_list, 3) \n  \n# printing the result \nprint(\"All possible combinations are : \") \nfor item in result: \n    print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 359,
            "material": "Introduction Python",
            "instruction": "Write a Python snippet to print the difference between the largest and smallest values in a given array.",
            "question": "def diff_max_min(numbers):\n    return max(numbers) - min(numbers)\n  \nif __name__ == '__main__':\n    nums = [1,2,3,4,5]\n    diff = diff_max_min(nums)\n    print(___)",
            "correct_answer": "diff",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 367,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print even numbers from 0 to the number provided",
            "question": "def print_even_numbers(N):\n    for x in range(0, N+1):\n        if x%2 == 0:\n            print(___)",
            "correct_answer": "x",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 445,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a given dictionary where the keys are numbers between 1 and 3 and the values are a list from 1 to the number key.",
            "question": "d = {1: [1], 2: [1,2], 3: [1,2,3]}\nfor k,v in d.items():\n    print(___)",
            "correct_answer": "k,v",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 466,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print all elements of a given set.",
            "question": "my_set = {10, 20, 30}\nfor i in my_set:\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 556,
            "material": "Introduction Python",
            "instruction": "Compose a Python program to print the first hundred odd numbers.",
            "question": "# declaring an empty list\nodds = []\n\n# looping for a range of 1 to 100\nfor n in range(1,101):\n# check if the number is odd\n if n % 2 != 0:\n  # add the odd numbers to the list\n  odds.append(n)\n\n# print the list\nprint(___)",
            "correct_answer": "odds",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 599,
            "material": "Introduction Python",
            "instruction": "Create a for-loop in Python to print a list of strings that contain only the vowels from a given list of strings.",
            "question": "for word in words:\n    vowels = \"\"\n    for x in word:\n        if x in ('a', 'e', 'i', 'o', 'u'):\n            vowels += x\n    print(___)",
            "correct_answer": "vowels",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 650,
            "material": "Introduction Python",
            "instruction": "Optimize an existing Python code snippet to print all even numbers between 1 and 10.",
            "question": "num = 0\nwhile num<=10:\n    if num % 2 == 0:\n        print(___)\n    num+=1",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 671,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print Pascal's Triangle of a given number of rows.",
            "question": "def pascal_triangle(n):\n    triangle = []\n\n    for i in range(n):\n        row = [1] * (i+1)\n        triangle.append(row)\n\n        for j in range(1,i):\n            row[j] = triangle[i-1][j-1] + triangle[i-1][j]\n\n    for row in triangle:\n        print(___)\n\npascal_triangle(6) \n# Output: [1]\n# [1, 1]\n# [1, 2, 1]\n# [1, 3, 3, 1]\n# [1, 4, 6, 4, 1]\n# [1, 5, 10, 10, 5, 1]",
            "correct_answer": "row",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 783,
            "material": "Introduction Python",
            "instruction": "Create a Python program to sort and print out the elements of an array of integers.",
            "question": "arr = [17, 41, 5, 22, 54, 6, 29, 3, 13]\n\narr.sort()\n\nprint(___)\n\n# Output: [3, 5, 6, 13, 17, 22, 29, 41, 54]",
            "correct_answer": "arr",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 859,
            "material": "Introduction Python",
            "instruction": "Create a python script to print the following output with the help of list and dictionary.",
            "question": "name = {\n    \"Harry\"\n}\nage = {\n    23\n}\ncountry = {\n    \"India\"\n}\n\ndata_list = [name, age, country]\n\nfor item in data_list:\n    print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 877,
            "material": "Introduction Python",
            "instruction": "Create a script in Python to print the squares of all numbers in the given list.",
            "question": "for n in [1, 2, 3, 4, 5]:\n print(___)",
            "correct_answer": "n**2",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 894,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print a calendar of the given month and year",
            "question": "import calendar\n\nc = calendar.TextCalendar(calendar.SUNDAY)\nstr = c.formatmonth(year, month)\nprint(___)",
            "correct_answer": "str",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 950,
            "material": "Introduction Python",
            "instruction": "Develop a Python code to print the pairs of the numbers in the given list which adds up to the given target number.",
            "question": "def pairs_adding_to_target(nums, target): \n \n\tresult = [] \n\tfor i in range(0, len(nums)): \n\t\tfor j in range(i+1, len(nums))\t: \n\t\t\tif nums[i] + nums[j] == target:\t \n\t\t\t\tresult.append([nums[i], nums[j]]) \n\treturn result \n\nresult = pairs_adding_to_target([1, 5, 9, 4], 10)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1067,
            "material": "Introduction Python",
            "instruction": "Add code in python to the given argument to iterate over a list of numbers and print the even numbers.",
            "question": "# Iterate over numbers\nfor num in [1,2,3,4,5]:\n  # Check for even\n  if(num % 2 == 0):\n    # Print the even numbers\n    print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1077,
            "material": "Introduction Python",
            "instruction": "Write a Python function to print prime numbers between two given numbers.",
            "question": "def print_prime_numbers_between_two_numbers(low, high): \n    for numb in range(low,high + 1): \n        if numb > 1: \n            for i in range(2,numb): \n                if (numb % i) == 0: \n                    break\n            else: \n                print(___) \n\n#calling the function\nprint_prime_numbers_between_two_numbers(5, 10)",
            "correct_answer": "numb",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1088,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the prime numbers between the given input range.",
            "question": "def print_primes(min, max):\n  for num in range(min, max+1):\n    if num > 1:\n      for i in range(2, num):\n        if (num % i) == 0:\n          break\n      else:\n        print(___)\n  \n# Driver Code\nmin = 1\nmax = 10\n\nprint_primes(min, max)\n\n# Output:\n# 2\n# 3\n# 5\n# 7",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1133,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to print the characters in a string.",
            "question": "for char in \"Hello World\":\n    print(___)",
            "correct_answer": "char",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1151,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the elements in a list which are not repeated more than once.",
            "question": "result = []\nfor ele in list:\n    if list.count(ele) == 1:\n        result.append(ele)\nprint(___) # Output: [1, 4]",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1181,
            "material": "Introduction Python",
            "instruction": "Create a for loop statement in Python to iterate over a list and print the each item in the list.",
            "question": "for i in [1,2,3,4,5]:\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1364,
            "material": "Introduction Python",
            "instruction": "Create a for loop in python to print all the items in the given list.",
            "question": "for item in List:\n    print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1394,
            "material": "Introduction Python",
            "instruction": "Create a Python program to parse a CSV string and print each row in a readable format.",
            "question": "import csv \n  \ncsvString = \"John Doe, 22, ABC Street, 07777\\nMary Smith, 26, XYZ Street, 02222\"\n  \n# Convert CSV String to List\ncsvList = csvString.split('\\n')\n  \n# Print each Row of CSV \nfor row in csvList: \n    print(___)",
            "correct_answer": "row",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1463,
            "material": "Introduction Python",
            "instruction": "Generate Python code to print the first \u2018n\u2019 elements of the Fibonacci series.",
            "question": "def print_fibonacci_series(n):\n    a, b = 0, 1\n    for i in range(n):\n        print(___)\n        a, b = b, a + b\n\nprint_fibonacci_series(7)",
            "correct_answer": "a",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1570,
            "material": "Introduction Python",
            "instruction": "Given a list of strings, write a Python code snippet to print all strings that begin with a letter 'a'.",
            "question": "for item in [\"apple\", \"banana\", \"orange\", \"avocado\"]:\n if item.startswith('a'):\n print(___)\n\n# Output:\napple\navocado",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1619,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the count of all even numbers in the given list.",
            "question": "my_list = [1, 2, 3, 4, 5, 6, 7, 8]\n\ncount = 0\nfor i in my_list:\n    if i % 2 == 0:\n        count += 1\n\nprint(___)",
            "correct_answer": "count",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1673,
            "material": "Introduction Python",
            "instruction": "Create a python program to accept two inputs from the user, a number and a string, and print the string the given number of times.",
            "question": "num = int(input(\"Enter a number: \"))\nstring = input(\"Enter a string: \")\n\nfor i in range(num):\n print(___)",
            "correct_answer": "string",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1712,
            "material": "Introduction Python",
            "instruction": "Modify the provided Python program to print out the numbers from 1 to 10",
            "question": "for i in range(1, 11):\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1725,
            "material": "Introduction Python",
            "instruction": "Generate a Python function to print a pattern of stars",
            "question": "def starPattern(n):\n    # outer loop to handle number of rows\n    for i in range(0, n):\n        # inner loop to handle number of columns\n        for j in range(0, i + 1):\n            # printing stars\n            print(\"* \", end=\"\")\n        # ending line after each row\n        print(___)\n\n# Driver code\nn = 5\nstarPattern(n)",
            "correct_answer": "\"\\r\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1746,
            "material": "Introduction Python",
            "instruction": "Create a basic Python script that converts all strings in a given dictionary to uppercase.",
            "question": "d = {\"name\": \"John\", \"age\": 45, \"location\": \"San Francisco\"}\nfor key in d:\n d[key] = str(d[key]).upper()\n\nprint(___)\n# Output: {\"name\": \"JOHN\", \"age\": 45, \"location\": \"SAN FRANCISCO\"}",
            "correct_answer": "d",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1810,
            "material": "Introduction Python",
            "instruction": "Make a program in Python to print a staircase of height 'n', where n is an integer.",
            "question": "def staircase(n): \n    for i in range(0, n): \n        for j in range(0, n - i - 1): \n            print(end=\" \") \n        for j in range(0, i + 1): \n            print(\"#\", end=\"\") \n        print(___) \n  \n# Driver code \nn = 5\nstaircase(n)",
            "correct_answer": "\"\\r\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1836,
            "material": "Introduction Python",
            "instruction": "Create a for-loop in Python to iterate over a list and print each element.",
            "question": "words = [\"these\", \"are\", \"some\", \"words\"]\nfor word in words:\n  print(___)",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1864,
            "material": "Introduction Python",
            "instruction": "Use Python to calculate and print the sum of values in an array.",
            "question": "arr = [1,2,3,4,5] \nsum = 0\nfor i in arr: \n    sum+=i \n    print(___)\n\n# Output \n# 15",
            "correct_answer": "sum",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1913,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print all the prime numbers in an array.",
            "question": "def print_primes(arr):\n    for i in arr:\n        if i > 1:\n            for j in range(2,i):\n                if (i % j) == 0:\n                    break\n            else:\n                print(___)\n\nprint_primes(array)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 1986,
            "material": "Introduction Python",
            "instruction": "Write a function in Python to print every other element in a list.",
            "question": "def print_every_other(lst):\n for i in range(0, len(lst), 2):\n print(___)",
            "correct_answer": "lst[i]",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2030,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to iterate over a list of numbers and print out only the even numbers.",
            "question": "for num in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:\n if num % 2 == 0:\n print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2060,
            "material": "Introduction Python",
            "instruction": "Generate a Python function to print all the even numbers from 0 to a given number.",
            "question": "def print_even_numbers(n):\n    for i in range(0, n+1):\n        if i % 2 == 0:\n            print(___)\n\nprint_even_numbers(10)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2091,
            "material": "Introduction Python",
            "instruction": "Implement a function in Python to print all the uppercase letters from a given string.",
            "question": "def print_uppercase(s):\n    for c in s:\n        if c.isupper():\n            print(___)\n\nprint_uppercase(\"Hello World\")\n# Output:\n# H\n# W",
            "correct_answer": "c",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2126,
            "material": "Introduction Python",
            "instruction": "Construct a nested loop in Python to print out the following elements in a new line.",
            "question": "for x in [1,2,3]:\n  for y in [4,5,6]:\n      for z in [7,8,9]:\n          print(___)",
            "correct_answer": "x,y,z",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2206,
            "material": "Introduction Python",
            "instruction": "Create a basic Python application to return the similarity between two strings using fuzzywuzzy.",
            "question": "# Import the necessary modules\nimport fuzzywuzzy \nfrom fuzzywuzzy import process\n\n# The two strings to compare \nstr1 = 'Apple'\nstr2 = 'Apples'\n\n# Compare the two strings\nscore = fuzzywuzzy.fuzz.ratio(str1, str2)\n\n# Print the similarity score\nprint(___)\n\n# Output \n100",
            "correct_answer": "score",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2249,
            "material": "Introduction Python",
            "instruction": "Write a basic web scraper in Python using the BeautifulSoup library. The scraper should take as input a URL and output the text on the page.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\nurl = \"https://en.wikipedia.org/wiki/Web_scraping\" \nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\n\ntext = soup.find_all('p')\nfor t in text:\n    print(___)",
            "correct_answer": "t.text",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2336,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print out all possible permutations of a 3 character string.",
            "question": "def permutation(str):\n    if len(str) == 0:\n        return []\n    if len(str) == 1:\n        return [str]\n    l = [] \n    for i in range(len(str)):\n       m = str[i] \n       remLst = permutation(str[:i] + str[i+1:])\n       for p in remLst:\n           l.append(m + p)\n    return l\n\nstring = 'ABC'\nl = permutation(string)\nfor s in l:\n    print(___)",
            "correct_answer": "s",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2474,
            "material": "Introduction Python",
            "instruction": "Write a Python program to loop through a list and print each element of the list.",
            "question": "for x in [1, 2, 3, 4]:\n    print(___)",
            "correct_answer": "x",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2503,
            "material": "Introduction Python",
            "instruction": "Create a Python script to loop over a list of numbers and print out each value if it is greater than five.",
            "question": "def loop_list(list):\n    for i in list:\n        if i > 5:\n            print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2589,
            "material": "Introduction Python",
            "instruction": "Create a basic web scraper in Python to parse HTML.",
            "question": "#import library\nimport bs4\n\n#store HTML data\nhtml_data = '<p>This is some text</p><a href='www.example.com/'>Click Here</a>'\n\n#parse HTML data\nsoup = bs4.BeautifulSoup(html_data, 'html.parser')\n\n#get all tags\nall_tags = soup.find_all()\n\n#print result\nfor tag in all_tags:\n print(___)",
            "correct_answer": "tag",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2607,
            "material": "Introduction Python",
            "instruction": "Create an optimized Python program to print all prime numbers in a given range.",
            "question": "def is_prime(n):\n    if n <= 1:\n        return False\n  \n    for i in range(2, n):\n        if n % i == 0:\n            return False\n  \n    return True\n \nstart = 4\nend = 15\n \nfor num in range(start, end+1):\n   if is_prime(num):\n       print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2628,
            "material": "Introduction Python",
            "instruction": "Create a basic script in Python that can automatically sort a list of items by price.",
            "question": "items.sort(key=lambda x: x['price'])\n\nprint(___)\n# Output:\n[{'name': 'Sprite', 'price': 1.99},\n{'name': 'Pepsi', 'price': 2.99},\n{'name': 'Coca Cola', 'price': 3.99}]",
            "correct_answer": "items",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2648,
            "material": "Introduction Python",
            "instruction": "Create a Python program to search through a list of names and print out any names that contain the letter 'a'.",
            "question": "names = [\"John\", \"Paul\", \"George\", \"Ringo\", \"Adam\", \"Peter\", \"Alice\", \"Karen\", \"Jerry\"]\n\nfor name in names:\n if 'a' in name:\n print(___)\n\n# Output\nAdam\nAlice\nKaren",
            "correct_answer": "name",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2688,
            "material": "Introduction Python",
            "instruction": "Implement a Python parser to print return a list of words from a given string.",
            "question": "def parse_words(string):\n    words = []\n\n    for word in string.split(\" \"):\n        words.append(word.strip(\"!,.? \\n\\t\\r\\\"\\'-\"))\n    return words\n\nresult = parse_words(\"Hello, World!\")\nprint(___)\n##\nOutput: ['Hello', 'World']",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2693,
            "material": "Introduction Python",
            "instruction": "Create an algorithm in Python to print the numbers from 1 to n in increasing order, except for any numbers which are divisible by 3 should be printed as \"Fizz\".",
            "question": "def fizz(n):\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            print(___)\n        else:\n            print(i)\n\n#example\nfizz(20) # prints 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20",
            "correct_answer": "\"Fizz\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2741,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print all possible permutations of a given string.",
            "question": "from itertools import permutations \n  \n# Get all permutations of length 2 \n# and length 2 \nperm = permutations(\"ABC\", 2) \n  \n# Print the obtained permutations \nfor i in list(perm): \n    print(___) \n\n# Get all permutations of length 3 \n# and length 3 \nperm = permutations(\"ABC\") \n  \n# Print the obtained permutations \nfor i in list(perm): \n    print(i)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2776,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print out all prime numbers in a given list.",
            "question": "import math\n\ndef is_prime(n):\n    for i in range(2, int(math.sqrt(n))+1):\n        if n % i == 0: \n            return False\n    return True\n\ninput_list = [4, 15, 22, 50, 119]\n\nfor num in input_list:\n    if is_prime(num):\n        print(___)\n\n# Output: \n# 4\n# 15\n# 50\n# 119",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2840,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print out all the prime numbers between two integers.",
            "question": "def print_primes(start, end):\n for n in range(start, end + 1):\n if is_prime(n):\n print(___)\n \ndef is_prime(n):\n if n <= 1:\n return False\n elif n <= 3:\n return True\n elif (n % 2 == 0) or (n % 3 == 0):\n return False\n \n i = 5\n while i ** 2 <= n:\n if (n % i == 0) or (n % (i + 2) == 0):\n return False\n i += 6\n \n return True\n\nprint_primes(10, 25)",
            "correct_answer": "n",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2910,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out all possible pairs of two lists.",
            "question": "for i in list1:\n    for j in list2:\n        print(___)\n\n# Output:\n# (1, 'a')\n# (1, 'b')\n# (1, 'c')\n# (2, 'a')\n# (2, 'b')\n# (2, 'c')\n# (3, 'a')\n# (3, 'b')\n# (3, 'c')",
            "correct_answer": "i,j",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2917,
            "material": "Introduction Python",
            "instruction": "Create a for loop in Python to iterate over a list of numbers and print only the even numbers.",
            "question": "for num in my_list:\n    if num % 2 == 0:\n        print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2935,
            "material": "Introduction Python",
            "instruction": "Optimize the following Python code to print the numbers in reverse.",
            "question": "for i in reversed(range(1,11)):\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 2984,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the key of the element in a dictionary that has the maximum value.",
            "question": "dictionary = {'a': 3, 'b': 6, 'c': 9, 'd': 12}\n\nmax_value = max(dictionary.values())\nfor key, value in dictionary.items():\n if value == max_value:\n print(___)",
            "correct_answer": "key",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3021,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print all prime numbers from 1 to n",
            "question": "def print_primes(n):\n    for num in range(2, n+1):\n        for i in range(2, num):\n            if (num % i) == 0:\n                break\n        else:\n            print(___)\n\nprint_primes(10)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3050,
            "material": "Introduction Python",
            "instruction": "Write a Python program to traverse a two-dimensional array and print each row.",
            "question": "def traverse_2d_list(list2d):\n    for row in list2d:\n        print(___)",
            "correct_answer": "row",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3101,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print the most popular item in a list.",
            "question": "from collections import Counter\n\ndef most_popular(arr):\n    cnt = Counter()\n    for number in arr:\n        cnt[number] += 1\n    return cnt.most_common(1)[0][0]\n\nresult = most_popular([1, 5, 9, 1, 4, 5, 9])\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3236,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print a square matrix of size n containing the numbers from 11 to n*n.",
            "question": "n = 3\n\noutput_matrix = [[0 for x in range(n)] for y in range(n)] \n  \nnum = 1\n  \nfor i in range (0, n):    \n for j in range(0, n):     \n output_matrix[i][j] = num    \n num = num + 1    \n  \nfor i in range(0, n):\n for j in range(0, n):\n print(output_matrix[i][j], end = \" \")\n print(___)",
            "correct_answer": "\"\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3245,
            "material": "Introduction Python",
            "instruction": "Design a FOR loop algorithm in Python to print all numbers starting from one to the given number.",
            "question": "for i in range(1, 11): \n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3250,
            "material": "Introduction Python",
            "instruction": "Create a Python program to determine if a given string is a palindrome and if so, print it.",
            "question": "# Function to check if a string is a palindrome\ndef isPalindrome(s):\n # Reverse the string\n rev_s = s[::-1]\n\n # Check if the string is the same as its reverse\n if (s == rev_s):\n return True\n return False\n\n# Driver code\ns = 'racecar'\n\n# Check if the given word is a palindrome\nif (isPalindrome(s)):\n print(___)",
            "correct_answer": "s",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3369,
            "material": "Introduction Python",
            "instruction": "Develop a Python script to print out the prime numbers up to a given limit.",
            "question": "def is_prime(n):\n if n == 1:\n return False\n for i in range(2, n):\n if n % i == 0:\n return False\n return True\n\n# Print out prime numbers from 1 to 100\nlimit = 100\n\nfor i in range(1, limit+1):\n if is_prime(i):\n print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3371,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print all elements in a nested list.",
            "question": "def print_elements(nested_list):\n    \n    for item in nested_list:\n        if type(item) == list:\n            print_elements(item)\n        else:\n            print(___)\n\nprint_elements(nested_list)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3399,
            "material": "Introduction Python",
            "instruction": "Generate a Python code which calls a function to print the following array?",
            "question": "arr = [1,3,7,9,10]\n\ndef print_array(arr):\n    '''This function prints the elements of an array'''\n    for ele in arr:\n        print(___)\n\nprint_array(arr)",
            "correct_answer": "ele",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3447,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out the even numbers in the given list.",
            "question": "#Print out even numbers from the given list\nfor num in list:\n    if (num % 2 == 0):\n        print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3468,
            "material": "Introduction Python",
            "instruction": "Create a for loop in Python to print out the numbers in a given list in reverse order.",
            "question": "list = [1,2,3,4,5]\nfor i in reversed(list):\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3532,
            "material": "Introduction Python",
            "instruction": "Modify the following python code to print the count of values greater than 5.",
            "question": "data = [1,2,3,4,5,6,7,8,9]\n\ncount = 0\nfor value in data:\n  if value > 5:\n    count += 1\n\nprint(___)",
            "correct_answer": "count",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3584,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print the elements of a given array in reverse order.",
            "question": "def print_reverse(arr):\n    for i in range(len(arr)-1, -1, -1):\n        print(___)",
            "correct_answer": "arr[i]",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3607,
            "material": "Introduction Python",
            "instruction": "Suggest a completion of the following Python code to print all perfect squares between 25 and 45.",
            "question": "for n in range(25, 46):\n    if n ** 0.5 == int(n ** 0.5):\n        print(___)",
            "correct_answer": "n",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3686,
            "material": "Introduction Python",
            "instruction": "Write a Python code fragment to print all the leap years between two years.",
            "question": "for year in range(start_year, end_year+1):\n    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):\n        print(___)",
            "correct_answer": "year",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3717,
            "material": "Introduction Python",
            "instruction": "Design a loop in Python to iterate over the elements of a list and print the elements in reverse order.",
            "question": "my_list = [10, 15, 20]\nfor i in my_list[::-1]:\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3724,
            "material": "Introduction Python",
            "instruction": "Generate a class in Python, implementing the __init__ and __str__ methods to initialize a variable and print its value.",
            "question": "class Person:\n    def __init__(self, name):\n        self.name = name\n\n    def __str__(self):\n        return self.name\n\np = Person('John Doe')\nprint(___)",
            "correct_answer": "p",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3787,
            "material": "Introduction Python",
            "instruction": "Create a Python program to read in a list of items and print them out in reverse order.",
            "question": "my_list = [\"Apple\", \"Pear\", \"Banana\", \"Orange\"]\n\nfor item in reversed(my_list):\n print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 3932,
            "material": "Introduction Python",
            "instruction": "Edit the given Python code to add a feature which will print the squares of given numbers.",
            "question": "def printNumbers(a, b): \n    for i in range(a, b + 1): \n        print(i, end = \" \") \n    print(___)\n    for i in range(a, b + 1):\n        print(i*i, end = \" \")",
            "correct_answer": "\"\\n\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4036,
            "material": "Introduction Python",
            "instruction": "Please provide Python code to print out all the prime numbers in a list of numbers.",
            "question": "def is_prime(num):\n  for i in range(2, num):\n    if num % i == 0:\n      return False\n  return True\n\nlist_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11] \nfor i in list_of_numbers:\n  if is_prime(i):\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4160,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print the first n even numbers.",
            "question": "n = 10\n\nfor i in range(1, n+1):\n if i % 2 == 0:\n print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4211,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to print all the prime numbers in a given range.",
            "question": "for n in range(2, 21): \n   if n > 1: \n       for i in range(2, n//2 + 2): \n           if (n % i) == 0: \n               break\n       else: \n           print(___)",
            "correct_answer": "n",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4314,
            "material": "Introduction Python",
            "instruction": "Modify a basic Python algorithm to increase the speed of the program.",
            "question": "def faster_sum(arr):\n total = 0\n # looping over the array and adding the elements\n # to the variable total\n for i in range(0, len(arr)):\n total += arr[i]\n return total\n\nlist_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# using the faster_sum() function\nresult = faster_sum(list_of_numbers)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4363,
            "material": "Introduction Python",
            "instruction": "Create a Python script to iterate over a list of words and print them out one by one.",
            "question": "for word in ['cat', 'dog', 'bird']:\n    print(___)",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4398,
            "material": "Introduction Python",
            "instruction": "Write a Python program to concatenate two strings and print the combined string.",
            "question": "string1 = 'I love'\nstring2 = 'Programming'\n\noutput = string1 + string2\n\nprint(___)\n\n# Output\nI love Programming",
            "correct_answer": "output",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4407,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all the numbers from 1 to n (inclusive), where n is a given number.",
            "question": "for i in range(1, n+1): \n print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4457,
            "material": "Introduction Python",
            "instruction": "Generate a Python code to print all the animal types entered in a list",
            "question": "animal_list = [\"dog\", \"cat\", \"mouse\", \"snake\"] \n\nfor animal in animal_list:\n    print(___)",
            "correct_answer": "animal",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4507,
            "material": "Introduction Python",
            "instruction": "Come up with a python program to join two strings x and y, and then print the resulting combined string.",
            "question": "x = \"Hello\"\ny = \"World\"\n\nresult = x + y\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4548,
            "material": "Introduction Python",
            "instruction": "In Python, create a function to check if a given number is prime, and then print out all prime numbers between 0 and that number.",
            "question": "def is_prime(number):\n    if number <= 1:\n        return False\n    for i in range(2, number):\n        if number % i == 0:\n            return False\n    return True\n\ndef print_primes(upper_limit):\n    for i in range(2, upper_limit+1):\n        if is_prime(i):\n            print(___)\n\nprint_primes(25)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4585,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to print the elements of a list in reverse order.",
            "question": "my_list = [1, 2, 3, 4, 5]\n\nfor i in reversed(my_list):\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4595,
            "material": "Introduction Python",
            "instruction": "Modify the following Python code to print the sum of the elements in a given list (without using the sum() function).",
            "question": "my_list = [1, 5, 4, -3, 10]\n\ntotal = 0\n\nfor num in my_list:\n total += num\n\nprint(___) # prints 17",
            "correct_answer": "total",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4603,
            "material": "Introduction Python",
            "instruction": "Write a Python code snippet to search and print all items in the list that starts with substring \"java\".",
            "question": "arr = [\"python\", \"c++\", \"java\", \"java-script\"]\n\nresult = []\nfor item in arr:\n    if item.startswith(\"java\"):\n        result.append(item)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4652,
            "material": "Introduction Python",
            "instruction": "Create a Python script to generate 10 random numbers and print their sum.",
            "question": "import random\n\nnums = random.sample(range(100), 10)\ntotal = 0\n\nfor num in nums:\n    total += num\n\nprint(___)",
            "correct_answer": "total",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4714,
            "material": "Introduction Python",
            "instruction": "Update the given Python program to print the result in reverse order.",
            "question": "numbers = [1, 2, 3, 4, 5, 6]\n\nfor x in reversed(numbers):\n    print(___)",
            "correct_answer": "x",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4767,
            "material": "Introduction Python",
            "instruction": "Examine a given Python program and modify it to only print out characters which are palindromes.",
            "question": "my_string = \"I like mangoes\"\n\nfor char in my_string:\n\tif char == char[::-1]:\n\t\tprint(___)",
            "correct_answer": "char",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4775,
            "material": "Introduction Python",
            "instruction": "Create a loop in Python to print every permutation of a list of strings.",
            "question": "import itertools \n  \n# list of strings \nlist_of_strings = [\"Hello\", \"World\", \"Foo\", \"Bar\"] \n  \n# using itertools \n# to get the permutations \npermutations = itertools.permutations(list_of_strings) \n  \n# printing permutations \nfor i in list(permutations): \n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4818,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print all odd numbers from an array of integers.",
            "question": "def printOddNumbers(array):\n  for number in array:\n    if number % 2 != 0:\n      print(___)\n\narray = [3, 5, 7, 10, 15]\nprintOddNumbers(array)",
            "correct_answer": "number",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4858,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print the Fibonacci series up to a given range.",
            "question": "def Fibonacci(n): \n    if n<0: \n        print(\"Incorrect input\") \n    # First Fibonacci number is 0 \n    elif n==1: \n        return 0\n    # Second Fibonacci number is 1 \n    elif n==2: \n        return 1\n    else: \n        return Fibonacci(n-1)+Fibonacci(n-2) \n   \n# Driver Program \nresult = []\nfor i in range(1,10): \n    result.append(Fibonacci(i))\n    \nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 4965,
            "material": "Introduction Python",
            "instruction": "Generate a code that will print out all substrings of a given string.",
            "question": "def substrings(s):\n    sub_str_list = []\n    for i in range(len(s)):\n        for j in range(i + 1, len(s)+1):\n            sub_str = s[i:j]\n            sub_str_list.append(sub_str)\n    return sub_str_list\n\nresult = substrings(\"python\")\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5013,
            "material": "Introduction Python",
            "instruction": "Write a function to print the following pattern in Python.",
            "question": "def print_pattern(n): \n  \n    # outer loop to handle number of rows \n    for i in range(1,n+1): \n      \n        # inner loop to handle number of columns \n        for j in range(1,i+1): \n          \n            # printing stars \n            print('* ', end=\"\") \n       \n        # ending line after each row \n        print(___) \n  \n# Driver Code \nn = 3\nprint_pattern(n)\n\nOutput:\n* \n* * \n* * *",
            "correct_answer": "\"\\r\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5033,
            "material": "Introduction Python",
            "instruction": "Edit the following Python script to randomly select 10 numbers between 10 and 20, store them in the list lst, and print them out.",
            "question": "import random\nlst = random.sample(range(10, 21), 10)\nprint(___)",
            "correct_answer": "lst",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5079,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print the first n numbers of the Fibonacci series.",
            "question": "def Fibonacci(n): \n a = 0\n b = 1\nif n<0: \n print(\"Incorrect input\") \nelif n==0: \n print(___) \nelif n==1: \n print(b) \nelse: \n print(a)\n print(b)\n for i in range(2,n): \n c = a + b \n a = b \n b = c \n print(b)",
            "correct_answer": "a",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5081,
            "material": "Introduction Python",
            "instruction": "Write a python program to iterate over two lists and print only the common items.",
            "question": "list1 = [1, 2, 3, 4, 5]\nlist2 = [4, 5, 6, 7, 8]\n\nfor i in list1:\n  if i in list2: \n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5123,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print a number pyramid given a height.",
            "question": "def pyramid(h): \n    \n    for i in range(0, h): \n        for j in range(0, h-i-1): \n            print(end=\" \") \n        for j in range(0, i+1): \n            print(\"* \", end=\"\") \n        print(___) \n\npyramid(3)",
            "correct_answer": "\"\\r\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5134,
            "material": "Introduction Python",
            "instruction": "Modify the given program to print the output in reverse order",
            "question": "def print_list_reverse(lst):\n    for i in reversed(lst):\n        print(___)\n\nword_list = [\"Python\", \"is\", \"fun\"]\n\nprint_list_reverse(word_list)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5135,
            "material": "Introduction Python",
            "instruction": "Create a python program to print out all combinations of elements from two lists.",
            "question": "for i in list1:\n    for j in list2:\n        print(___)",
            "correct_answer": "i, j",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5209,
            "material": "Introduction Python",
            "instruction": "Edit the following Python program to print all the numbers in a given list, one number per line.",
            "question": "list = [1, 2, 3, 4, 5]\n\nfor num in list:\n    print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5223,
            "material": "Introduction Python",
            "instruction": "Create a function in Python to print a sorted list of the given input string.",
            "question": "def sortString(inputString): \n  \n    words = inputString.split() \n    words.sort() \n  \n    for i in words: \n        print(___) \n          \nsortString(inputString)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5291,
            "material": "Introduction Python",
            "instruction": "Generate a Python program to print a numbers pyramid of size n, with the first line of the pyramid containing n consecutive numbers.",
            "question": "n = int(input())\n \nfor i in range(1, n + 1):\n for j in range(1, i + 1):\n  print(j, end=\"\")\n print(___)\n \nfor i in range(n - 1, 0, -1):\n for j in range(1, i + 1):\n  print(j, end=\"\")\n print(\"\")",
            "correct_answer": "\"\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5327,
            "material": "Introduction Python",
            "instruction": "Create an algorithm in Python to print all the prime numbers between two given numbers.",
            "question": "def printPrimeNumbers(start, end):\n \n for num in range(start, end + 1):\n   if num > 1:\n      for i in range(2, num):\n          if (num % i) == 0:\n              break\n      else:\n          print(___)\n          \nstart = 2\nend = 10\nprint(\"Prime numbers between\", start, \"and\", end, \"are:\")\nprintPrimeNumbers(start, end)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5426,
            "material": "Introduction Python",
            "instruction": "Create a Python function to print out all the words in a given string with the letter e.",
            "question": "def print_words_with_e(str): \n    words = str.split() \n    for word in words: \n        if 'e' in word: \n            print(___) \n\nprint_words_with_e(str)",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5435,
            "material": "Introduction Python",
            "instruction": "Optimize the following Python program to print numbers from 1 to 100 without using a loop.",
            "question": "def print_numbers():\n    if num <= 100:\n        print(___)\n        print_numbers(num + 1)\n\nprint_numbers(1)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5497,
            "material": "Introduction Python",
            "instruction": "Write a Python program to evaluate a simple expression and print the output.",
            "question": "def evaluate_expression(exp):\n  return eval(exp) \n\nexpression = \"7*6+20\"\noutput = evaluate_expression(expression)\nprint(___)",
            "correct_answer": "output",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5527,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print out all the numbers in a given range that are divisible by a given number.",
            "question": "def printDivisible(lower, upper, divisible):\n    for i in range(lower, upper + 1):\n        if i % divisible == 0:\n            print(___)\n\nprintDivisible(lower, upper, divisible)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5534,
            "material": "Introduction Python",
            "instruction": "Write a web scraper in Python to extract all the links from a given webpage and print them.",
            "question": "from bs4 import BeautifulSoup\nimport requests\n\n# Get html of desired webpage\nurl = \"https://www.example.com/\"\nr = requests.get(url)\nhtml = r.text\n\n# Parse html using BeautifulSoup\nsoup = BeautifulSoup(html, 'html.parser')\n\n# Extract all links\nlinks = []\nfor link in soup.find_all('a'):\n    links.append(link.get('href'))\n\n# Print all links\nprint(___)",
            "correct_answer": "links",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5557,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print the top 5 most frequent words in a given sentence.",
            "question": "import collections\n \nsentence = \"Python is an interpreted, high-level, general-purpose programming language.\"\n \n# Split sentence into words\nwords = sentence.split()\n \n# Set the counter for words\ncounter = collections.Counter(words)\n \n# Find top 5 most frequent words\nresult = counter.most_common(5)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5560,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print the sum of all numbers divisible by 3 or 7 in a list.",
            "question": "nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\ntotal = 0\n\nfor num in nums:\n    if (num % 3 == 0) or (num % 7 == 0):\n        total += num\n\nprint(___)   # Output: 42",
            "correct_answer": "total",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5580,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program to list all the odd numbers from 0 to a user-specified number",
            "question": "def odd_numbers(num):\n for n in range(num+1):\n if n % 2 != 0:\n print(___)\n\nodd_numbers(user_number)\n# Output: 1, 3, 5, 7, 9",
            "correct_answer": "n",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5621,
            "material": "Introduction Python",
            "instruction": "Create a Python script to print an nxn matrix containing all the numbers from 1 to n\u00b2",
            "question": "def print_matrix(n):  \n    matrix = [[0 for x in range(n)] for y in range(n)] \n    k = 1\n  \n    for i in range(0, n): \n  \n        for j in range(0, n): \n  \n            matrix[i][j] = k\n            k = k + 1\n  \n    for i in range(0, n): \n  \n        for j in range(0, n): \n            print(matrix[i][j], end = \" \")\n    \n        print(___)",
            "correct_answer": "\"\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5872,
            "material": "Introduction Python",
            "instruction": "Write a Python script to loop through a list of numbers and print out only the even numbers.",
            "question": "my_list = [3, 7, 10, 15, 17, 20]\n\nfor number in my_list: \n  if (number % 2 == 0): \n    print(___)",
            "correct_answer": "number",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5914,
            "material": "Introduction Python",
            "instruction": "Create a for-loop in Python to loop through the items in a list and print their elements.",
            "question": "for name in names:\n    print(___)",
            "correct_answer": "name",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5923,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print the following pattern",
            "question": "def print_pattern(n):\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            print(j, end=\"\")\n        print(___)\n\nprint_pattern(5)",
            "correct_answer": "\"\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 5978,
            "material": "Introduction Python",
            "instruction": "Debug the following Python program to print the given output.",
            "question": "a = [3,4,6,2,1]\nfor x in a:\n print(___)\na.sort() \nfor x in a:\n print(x) \n\nOutput:\n1\n2\n3\n4\n6",
            "correct_answer": "x",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6009,
            "material": "Introduction Python",
            "instruction": "Design an algorithm in Python to print out binary numbers between 1 and N.",
            "question": "def print_binary(n):\n if n == 0:\n  return\n \n print_binary(n-1)\n print(___)\n \nprint_binary(3)\n \n# Output: \n# 0b1\n# 0b10\n# 0b11",
            "correct_answer": "bin(n)",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6012,
            "material": "Introduction Python",
            "instruction": "Create a Python program to parse a list of strings and print the words with odd length.",
            "question": "list = ['abc', 'hello', 'world']\n\nfor word in list:\n    if (len(word) % 2 != 0):\n        print(___)",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6021,
            "material": "Introduction Python",
            "instruction": "Generate code to print each element of a list of strings in Python.",
            "question": "for item in [\"apple\", \"banana\", \"cherry\"]:\n    print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6062,
            "material": "Introduction Python",
            "instruction": "Create a Python program to read in 15 integers and print the sum of them.",
            "question": "def sum_nums(nums):\n    total = 0\n    for num in nums:\n        total += num\n    return total\n\nlst = [1, 5, 9, 0, 2, 4, 7, 8, 6, 10, 3, 11, 12, 13, 14]\ntotal = sum_nums(lst)\nprint(___)",
            "correct_answer": "total",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6143,
            "material": "Introduction Python",
            "instruction": "Create a basic web scraper in Python that takes a URL as input and returns the text content of that URL.",
            "question": "import requests\nfrom bs4 import BeautifulSoup\n\nurl = 'https://www.example.com'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\n\ntext = soup.get_text()\n\nprint(___)",
            "correct_answer": "text",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6155,
            "material": "Introduction Python",
            "instruction": "Create a Python program to iterate through a dictionary and print out all the values.",
            "question": "my_dict = {\"a\":1, \"b\":2, \"c\":3, \"d\":4}\n\nfor key, value in my_dict.items():\n    print(___)",
            "correct_answer": "value",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6311,
            "material": "Introduction Python",
            "instruction": "Create a basic Python program to split a given string in words and save them in an array.",
            "question": "string = \"This is a sentence.\"\nwords = string.split(\" \")\nprint(___)\n# Output: ['This', 'is', 'a', 'sentence.']",
            "correct_answer": "words",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6325,
            "material": "Introduction Python",
            "instruction": "Using a for loop and if block, write a Python program to print numbers divisible by 5.",
            "question": "for num in range(1, 20): \n    if num % 5 == 0: \n        print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6351,
            "material": "Introduction Python",
            "instruction": "Write a loop in Python to iterate through a list and print all elements that have an even length.",
            "question": "list_x = [\"apples\", \"oranges\", \"bananas\", \"pineapples\"]\nfor item in list_x:\n if(len(item) % 2 == 0):\n  print(___)\n#output: apples, oranges, pineapples",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6364,
            "material": "Introduction Python",
            "instruction": "Write a Python function to print the first n rows of Pascal's triangle.",
            "question": "def pascal_triangle(rows): \n triangle = [[1]] \n for i in range(rows - 1): \n last_row = triangle[-1]\n new_row = [1] \n for j in range(len(last_row) - 1): \n new_row.append(last_row[j] + last_row[j+1]) \n new_row.append(1) \n triangle.append(new_row)\n \n for row in triangle: \n print(___)\n\npascal_triangle(5)",
            "correct_answer": "row",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6372,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print all the numbers from the given list which are divisible by 7.",
            "question": "def divisible_by_seven(number_list):\n    for i in number_list:\n        if i % 7 == 0:\n            print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6398,
            "material": "Introduction Python",
            "instruction": "Write a Python script to print all prime numbers between two numbers, a and b (where a<b).",
            "question": "for num in range(a, b+1): \n   if num > 1: \n       for i in range(2, num): \n           if (num % i) == 0: \n               break\n       else: \n           print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6452,
            "material": "Introduction Python",
            "instruction": "Generate a correct Python program to print out the sequence of numbers in ascending order from a given list.",
            "question": "for i in sorted([10, 5, 2, 8, 12]):\n        print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6474,
            "material": "Introduction Python",
            "instruction": "Modify the following python code to take in an argument to carry out a specific operation and print it out.",
            "question": "def operation(op):\n    result = eval(op)\n    print(___)\n\noperation('2*2') # prints 4",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6481,
            "material": "Introduction Python",
            "instruction": "Manipulate a python dictionary to print the duplicate keys in a key-value pair.",
            "question": "for key, value in dictionary.items():\n    if dictionary.count(key) > 1:\n        print(___)",
            "correct_answer": "key",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6554,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print out the elements of a list in reverse order.",
            "question": "# Creating a new reversed list\nreversed_list = mylist[::-1]\n\n# Iterating through the list and printing each element\nfor num in reversed_list:\n    print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6654,
            "material": "Introduction Python",
            "instruction": "Write a Python program to remove the duplicates in a list and print the list in ascending order.",
            "question": "\"\"\"\nWrite a Python program to remove the duplicates in a list and print the list in ascending order\n\"\"\"\n\ndef remove_duplicates_ascending(l):\n    return sorted(list(set(l)))\n\nif __name__ == \"__main__\":\n    l = [10,7,9,12,11,7,9,10]\n    res = remove_duplicates_ascending(l)\n    print(___) # [7, 9, 10, 11, 12]",
            "correct_answer": "res",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6660,
            "material": "Introduction Python",
            "instruction": "Edit the following Python program to print all the even numbers from 0 to 10.",
            "question": "for i in range(11):\n  if i % 2 == 0:\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6724,
            "material": "Introduction Python",
            "instruction": "You need to edit an existing Python program. The program to accept and print a sentence.",
            "question": "str1 = \"Hello World\"\n\nprint(___)",
            "correct_answer": "str1",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6803,
            "material": "Introduction Python",
            "instruction": "Create a Python 2 program to print the following pattern.",
            "question": "for i in range(1, 11):\n    for j in range(1, i+1):\n        print(___)*i, end=\" \")\n    print()",
            "correct_answer": "i+(j-1",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6804,
            "material": "Introduction Python",
            "instruction": "Edit the Python code to print the sum of two given numbers.",
            "question": "a = 1 \nb = 2\nsum = a + b \nprint(___) # 3",
            "correct_answer": "sum",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6856,
            "material": "Introduction Python",
            "instruction": "Create a Python program to print the numbers in descending order.",
            "question": "lst = [10, 3, 5, 8, 7]\n\nlst.sort(reverse=True)\n\nfor n in lst:\n    print(___)",
            "correct_answer": "n",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6865,
            "material": "Introduction Python",
            "instruction": "Write a Python program to allow a user to input a sentence and print the words in the sentence in reverse order.",
            "question": "def reverse_words_in_sentence(sentence):\n    words_list = sentence.split()\n    words_list.reverse()\n    reversed_sentence = \" \".join(words_list)\n    return reversed_sentence\n\nsentence = \"This is my sentence.\"\nresult = reverse_words_in_sentence(sentence)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6906,
            "material": "Introduction Python",
            "instruction": "Generate a Python script to iterate through a list and print each element.",
            "question": "for item in lst:\n  print(___)",
            "correct_answer": "item",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 6970,
            "material": "Introduction Python",
            "instruction": "Given a list of numbers, create a Python script to print all the elements greater than 50.",
            "question": "nums = [2, 60, 5, 4, 78, 32, 99]\n\nfor num in nums:\n    if num > 50:\n        print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7011,
            "material": "Introduction Python",
            "instruction": "Write a Python program to print out all even numbers in a given range.",
            "question": "def print_even_numbers(start, end):\n    for i in range(start, end + 1):\n        if i % 2 == 0:\n            print(___)\n\nif __name__ == '__main__':\n    print_even_numbers(1, 10)\n\n# Output\n2\n4\n6\n8\n10",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7139,
            "material": "Introduction Python",
            "instruction": "Create a program in Python to print the greatest of three numbers.",
            "question": "def get_max(x, y, z):\n    if (x > y) and (x > z):\n        maximum = x\n    elif (y > x) and (y > z):\n        maximum = y\n    else:\n        maximum = z\n\n    return maximum\n\nresult = get_max(2, 4, 3)\nprint(___)",
            "correct_answer": "result",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7155,
            "material": "Introduction Python",
            "instruction": "Write a Python program to extract all words from a sentence and print them.",
            "question": "sentence = \"The quick brown fox\"\nwords = sentence.split(\" \")\n\nfor word in words:\n print(___)\n\n# Output\n# The\n# quick\n# brown\n# fox",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7289,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print out all prime numbers in a range",
            "question": "def is_prime(n):\n    for i in range(2, n):\n        if n%i == 0:\n            return False\n    return True\n\nfor num in range(1, 10):\n    if is_prime(num):\n        print(___)",
            "correct_answer": "num",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7339,
            "material": "Introduction Python",
            "instruction": "Design a Python program to print all keywords in a given paragraph.",
            "question": "text = \"The best way to learn a programming language is to practice coding.\"\nwords = text.split()\n\nkeywords = [\"for\", \"if\", \"while\", \"in\", \"range\", \"def\", \"import\", \"from\", \"as\", \"return\"]\n\nfor word in words:\n    if word in keywords:\n        print(___)",
            "correct_answer": "word",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7366,
            "material": "Introduction Python",
            "instruction": "Write a function in Python to traverse a multi-dimensional array and print each item in the array.",
            "question": "def traverse_array(arr): \n if isinstance(arr, list) or isinstance(arr, tuple): \n for item in arr:\n traverse_array(item)\n else:\n print(___)\n\narr = [[1,2,3], [4,5,6], [7,8,9]] \ntraverse_array(arr)",
            "correct_answer": "arr",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7458,
            "material": "Introduction Python",
            "instruction": "Write a code snippet in Python to print Pascal\u2019s triangle for a given value of n.",
            "question": "def printPascalTriangle(n) : \n    for line in range(1, n + 1) : \n        C = 1 \n        for i in range(1, line + 1) : \n            print(C, end = \"\") \n            C = int(C * (line - i) / i); \n        print(___) \n\nn = 4\nprintPascalTriangle(n)",
            "correct_answer": "\"\"",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7464,
            "material": "Introduction Python",
            "instruction": "Create a basic Python script that computes the sum of two variables and stores the result in a third variable.",
            "question": "# compute the sum of x and y\nresult = x + y\n\n# store the result in a third variable\nz = result\n\n#print the result\nprint(___) # Output: 13",
            "correct_answer": "z",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7532,
            "material": "Introduction Python",
            "instruction": "Construct a for loop in Python to iterate over a given list and print the elements.",
            "question": "for i in my_list:\n    print(___)",
            "correct_answer": "i",
            "attempts": "1",
            "duration": "20"
        },
        {
            "question_id": 7558,
            "material": "Introduction Python",
            "instruction": "Write a python program to print the following pattern.",
            "question": "def pattern(n):\n  # Outer loop \n    for i in range(0, n): \n      \n    # Inner loop to handle number of columns \n    # values changing according to outer loop \n      for j in range(0, i+1): \n        \n    # Printing stars \n        print(\"* \",end=\"\") \n    \n    # Ending line after each row \n      print(___) \n  \n# Driver Code \npattern(5)",
            "correct_answer": "\"\\r\"",
            "attempts": "1",
            "duration": "20"
        }
    ]
}