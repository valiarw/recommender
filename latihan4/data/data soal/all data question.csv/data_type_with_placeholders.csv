question_id,material,instruction,template,input,correct_answer,attempts,duration
189,Data Type,Build a mini classifier model in Python to predict whether a given string is palindrome or not.,"class Palindrome:

def __init__(self, str):
    self.str = str ___ is_palindrome(self):
    return self.str == self.str[::-1]

palindrome = Palindrome(""level"")
if palindrome.is_palindrome():
    print(""The string is a palindrome"")
else:
    print(""The string is not a palindrome"")",'level',def,1,20
236,Data Type,Write a code to detect any pattern in a given string in Python.,"def detect_pattern(my_string):
    for i in range(len(my_string)):
        if my_string.count(my_string[i]) > 1:
            return True ___ False

if __name__ == '__main__':
    print(detect_pattern(my_string))","my_string = ""aabccba""",return,1,20
313,Data Type,Write a Python program to determine whether or not a given string is a palindrome.,"def isPalindrome(s):

 # remove whitespaces
 s = ''.join(s.split())

 # reverse string
 rev = s[::-1]

 # compare
 if rev == s:
 return True ___ False

if isPalindrome(""racecar""):
 print('String is a palindrome')
else:
 print('String is not a palindrome')","""racecar""",return,1,20
412,Data Type,Write a python function which will check if input string is palindrome or not.,"def is_palindrome(input_string):
    if input_string == input_string[::-1]:
        return True ___:
        return False
    
input_string = ""racecar""

check_palindrome = is_palindrome(input_string)

if check_palindrome == True:
    print(""Input string is a palindrome"")
else:
    print(""Input string is NOT a palindrome"")","input_string = ""racecar""",else,1,20
602,Data Type,Create a Python program to convert a list of characters into a string,"def list_to_str(arr):
    str = """"
    for i in arr:
        str += i
    return str ___ = ['a', 'b', 'c']
  
result = list_to_str(arr) 
print(result)","Convert this array ['a', 'b', 'c'] into a string",arr,1,20
632,Data Type,Create a Python script to validate a JSON string.,"import json

def validate_json_string(s):
    try:
        json_obj = json.loads(s)
        return True ___ json.JSONDecodeError:
        return False","""{""name"":""John"",""age"":30}""",except,1,20
664,Data Type,Write a function in Python that takes a given string and checks if it is a palindrome or not.,"def isPalindrome(s):
    left = 0 
    right = len(s)-1 
      
    while(left < right ): 
        if (s[left] != s[right]): 
            return False ___ += 1
        right -= 1
    return True
  
print (isPalindrome(""racecar""))","""racecar""",left,1,20
850,Data Type,Create a Python program to check if a given string can be formed from a given set of words.,"def word_set(string, words):
    words_set = set(words)
    string_set = set(string)
    
    if string_set.issubset(words_set):
        return True ___:
        return False

word_set(""justdoit"", [""just"", ""do"", ""it""])","String: ""justdoit""
Set of words: [""just"", ""do"", ""it""]",else,1,20
862,Data Type,Create a program in Python that has the following purpose: To determine if a given string is a palindrome,"def check_palindrome(inputStr): 
     
    revStr = reversed(inputStr)
  
    if list(inputStr) == list(revStr): 
        return True ___: 
        return False
      
userInput = ""radar""

if(check_palindrome(userInput)): 
    print(""Yes"") 
else: 
    print(""No"")","""radar""",else,1,20
944,Data Type,Generate a Python program to search for a specific string in a list.,"def search_string(lst, str):
    for item in lst:
        if item == str:
            return True ___ False

lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""
print(search_string(lst, str))","lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""",return,1,20
957,Data Type,Design a program in Python that accepts a string as input and checks whether or not it is palindrome.,"def isPalindrome(str): 
    for i in range(0, int(len(str)/2)):  
        if str[i] != str[len(str)-i-1]: 
            return False ___ True

inputStr = 'madam'

if (isPalindrome(inputStr)): 
    print(""Yes"")
else: 
    print(""No"")",madam,return,1,20
980,Data Type,Create a python function that takes a string of characters as input and checks if it is a valid identifier.,"import string

def isValidIdentifier(name):
    validChar = string.ascii_letters + ""_""
    if name[0] not in string.ascii_letters:
        return False ___ char in name[1:]:
        if char not in validChar:
            return False
            
    return True

validResult = isValidIdentifier(name)
print(validResult)","name = ""myVar""",for,1,20
1026,Data Type,Develop a program in Python to check whether a string contains only digits.,"def is_digit_only(string):
    for char in string:
        if not char.isdigit():
            return False ___ True

print(is_digit_only(""0123""))","""0123""",return,1,20
1158,Data Type,Develop an algorithm to check if a string S is a palindrome in Python.,"def is_palindrome(s):
    # Convert strings to lowercase
    s = s.lower()
 
    # Iterate through middle of string with indices 
    for i in range(len(s) // 2):
        if s[i] != s[len(s) - i - 1]:
            return False ___ True","String S = ""racecar""",return,1,20
1237,Data Type,Write a function in Python to search a string for a specific pattern.,"def search_for_pattern(s, pattern):
    if pattern in s:
        return True ___:
        return False

result = search_for_pattern(""abcxyzabc"", ""abc"")
print(result)","Search for ""abc"" in ""abcxyzabc",else,1,20
1326,Data Type,Filter a string in Python by removing all alphabets and keeping only the numbers.,"def filter_string(str):
    str = ''.join(x for x in str ___ x.isdigit())
    return str  

my_string = ""hey3this5is4my2string1""
print(filter_string(my_string))","my_string = ""hey3this5is4my2string1""",if,1,20
1523,Data Type,Implement a method in Python that takes two strings as input and returns true if one string is a rotation of the other.,"def isRotation(s1, s2): 
    if (len(s1) != len(s2)): 
        return False ___ = s1 + s1 
    if (s2 in temp): 
        return True
    return False

result = isRotation('abc', 'cab')
print(result)","s1='abc' 
s2='cab'",temp,1,20
1630,Data Type,Generate a Python program to search for a substring within a string.,"def search_substring(text, substring):
    if substring in text:
        return True ___:
        return False

result = search_substring(text, substring)
print(result)","text = ""This is a sample string."" 
substring = ""sample""",else,1,20
1657,Data Type,Write a Python program to check if a provided string is valid JSON.,"def is_valid_json(s):
    valid = True ___:
        json.loads(s)
    except ValueError:
        valid = False
    return valid","""<noinput>""",try,1,20
1678,Data Type,Create a Python function that takes in a string and a list of words and returns true if the string contains all the words in the list.,"def contains_words(input_string, words):
 for word in words:
 if word not in input_string:
 return False ___ True

print(contains_words('This is a test', ['test', 'this', 'is'])) # True","'This is a test', ['test', 'this', 'is']",return,1,20
1761,Data Type,Create a Python program to check if a given string has duplicates characters.,"def hasDuplicates(s):
    set = set()
    for ch in s:
        if ch in set:
            return True ___.add(ch)
    return False","String: ""helloworld""",set,1,20
1916,Data Type,Design a Python program to determine if one string is a substring of another.,"def isSubstring(str1, str2):
    if len(str1) > len(str2):
        return False ___ i in range(len(str2)):
        if (str2[i: i+len(str1)] == str1):
            return True

    return False

str1 = ""Hello""
str2 = ""Hello World""

print(isSubstring(str1, str2))","""Hello"", ""Hello World""",for,1,20
2052,Data Type,Write a Python program to evaluate a given string and return a Boolean value.,"def evaluate_string(string):
 if string == 'The sky is blue':
  return True ___:
  return False",String = “The sky is blue”,else,1,20
2194,Data Type,"Generate a Python function that takes a string as input and returns True if the string contains a capital letter, otherwise False.","def has_capital_letter(input_string):
    for character in input_string:
        if character.isupper():
            return True ___ False",MyString,return,1,20
2239,Data Type,Generate a correct python program to identify a particular character in a string.,"def char_in_string(char, string):
    for c in string:
        if c == char:
            return True ___ False",Search for the letter 'e' in the given string,return,1,20
2243,Data Type,Create a function in Python to determine whether a given string contains any whitespace character.,"def hasWhitespace(string):
 for c in string:
  if c.isspace():
   return True ___ False

print(hasWhitespace(""Hello World""))","""Hello World""",return,1,20
2312,Data Type,Create a Python script to detect if a certain item is in a given list of items. The script should work for any type of item.,"def detect_item(items, item):
  if item in items:
    return True ___:
    return False","items = [1,2,3,4,5]",else,1,20
2559,Data Type,"Create a python function to check if a given string contains a specific substring. The function should loop through the string and find the substring, and return a boolean value indicating if the substring was found or not.","def checkIfStringContainsSubstring(myString, substring):
  for i in range(len(myString) - len(substring) + 1):
    if myString[i:i+len(substring)] == substring:
      return True ___ False","myString = ""Hello World!""
substring = ""World""",return,1,20
2690,Data Type,Write a Python script to check if the given string is a palindrome.,"def is_palindrome(string_to_test):
    reverse = reversed(string_to_test)
    if list(string_to_test) == list(reverse):
        return True ___ False","string_to_test = ""racecar""",return,1,20
2695,Data Type,Write a Python program to check if a given string is a rotation of another given string.,"def is_rotation(str1, str2):
 if len(str1) != len(str2):
  return False ___ = str2 * 2
 
 return str1 in concat_str2
 
is_rotation(str1, str2)","str1 = ""waterbottle""
str2 = ""erbottlewat""",concat_str2,1,20
2958,Data Type,Identify the data type of the following input and provide a code to convert it to an integer in Python.,"input_type = type(""123"") # str ___ = int(""123"") # 123","""123""",converted_int,1,20
2996,Data Type,Build a function in Python to test whether a string is a palindrome.,"def is_palindrome(s): 
    # Reverse the string 
    rev = s[::-1] 
  
    # Check if the string is equal to its reverse 
    if (s == rev): 
        return True ___ False
  
# Driver code 
s = ""aba""
ans = is_palindrome(s) 
  
if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")","""aba""",return,1,20
3037,Data Type,Come up with an algorithm in Python that takes two strings as input and checks whether one string is a rotation of another.,"def is_rotation(s1, s2):
    if len(s1) != len(s2):
        return False ___ = s1 + s1
    if s2 in s1s1:
        return True
    return False

print(is_rotation(""ABACD"", ""CDABA""))","""ABACD"", ""CDABA""",s1s1,1,20
3058,Data Type,Create a solution that detects the presence of a character in a string.,"def detect_character(string, char):
    for ch in string:
        if ch == char:
            return True ___ False

string = 'Python'
char = 'y'
print(detect_character(string, char))",Python,return,1,20
3084,Data Type,"Create a Python function to search for a substring in a string. The function should take two arguments, the haystack string and the needle string, and should return a boolean indicating whether the substring was found or not.","def contains_substring(haystack, needle): 
 return needle in haystack

# Usage example
contains_substring(""This is a string"", ""is"") # returns True ___(""This is a string"", ""xyz"") # returns False","haystack: ""This is a string"" 
needle: ""is""",contains_substring,1,20
3156,Data Type,"Given two strings, write a python function to check whether one string is a substring of another.","def is_substring(string1, string2): 
    if string1 in string2:
        return True ___:
        return False","String1 = ""abc""
String2 = ""abcdef""",else,1,20
3269,Data Type,Generate a Python program to implement the following feature: Search a phrase in a given string.,"def search(phrase, string):
  if phrase in string:
     return True ___:
     return False 

result = search(""to be or not to be"", ""Whether 'tis nobler in the mind to suffer"")
print(result)","Search the phrase ""to be or not to be"" in the string ""Whether 'tis nobler in the mind to suffer"".",else,1,20
3406,Data Type,Create a function in Python that can tell if a string is a palindrome or not.,"def is_palindrome(word):
    reversed_word = word[::-1]

    if word == reversed_word:
        return True ___:
        return False
        
result = is_palindrome('civic')
print(result)",civic,else,1,20
3488,Data Type,Provide a type definition for the following class in Python.,"from typing import NamedTuple

class Student(NamedTuple):
    name: str ___: int","class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age",age,1,20
3541,Data Type,Write a Python function that takes two strings as arguments and returns true if the second string could be obtained by rotating the first string.,"def is_rotation(str1, str2):
    if len(str1) == len(str2) and len(str1) > 0:
        return (str1 + str1).find(str2) != -1
    return False ___('waterbottle', 'erbottlewat')","'waterbottle', 'erbottlewat'",is_rotation,1,20
3563,Data Type,"Generate an algorithm in Python that given a string of words, should check if it is a Palindrome.","def isPalindrome(s):
 s = s.lower()
 
 left = 0
 right = len(s) - 1
 
 while left < right:
 if s[left] != s[right]:
 return False ___ += 1
 right -= 1
 
 return True

s = 'racecar'
isPalindrome = isPalindrome(s)

print(isPalindrome) # Output: True","""racecar""",left,1,20
3657,Data Type,Create a Python program to write a string in Reverse order,"def reverse_string(input_string): 
    str = """" 
    for i in input_string: 
        str = i + str ___ str
  
if __name__ == ""__main__"": 
    input_string = ""This is a Test string""
    print(reverse_string(input_string))",This is a Test string,return,1,20
3706,Data Type,Create a Python program to check for anagrams of a string.,"def anagramCheck(str1, str2):
    if (len(str1) != len(str2)):
        return False ___ = sorted(str1)
    str2 = sorted (str2)

    # Compare each character in str1 with
    # each character in str2
    for i in range( len( str1 ) ):
        if (str1[i] != str2[i]):
            return False
 
    return True","""listen"", ""silent""",str1,1,20
3824,Data Type,Create an algorithm to detect a palindrome string in Python.,"def isPalindrome(str):
  left, right = 0, len(str) - 1
  while right >= left:
    if not str[left] == str[right]:
      return False ___ += 1
    right -= 1
  return True","String str = ""madam"";",left,1,20
3968,Data Type,Write a python program to check if a given string contains all alphabetic characters.,"def is_alpha(word): 
    if word.isalpha(): 
        return True ___: 
        return False","String: ""Hello World!""",else,1,20
4035,Data Type,"Write a Python function that takes a string as input and returns true if the string starts with the letter ""a"".","def starts_with_a(string):
    if string[0] == 'a':
        return True ___:
        return False

result = starts_with_a('awesome')
print(result)",String: awesome,else,1,20
4121,Data Type,Generate a Python function that checks to see if a given string is a palindrome.,"def is_palindrome(str):
    reversed_str = """"
    for i in range(len(str) - 1, -1, -1): 
        reversed_str += str[i]

    if str == reversed_str: 
        return True ___: 
        return False

string = ""madam""
result = is_palindrome(string)
print(result)",Input: madam,else,1,20
4156,Data Type,Write a Python program that determines whether the given string is a palindrome.,"def is_palindrome(string):
  if len(string) <= 1:
    return True ___:
    letter_1 = string[0]
    letter_2 = string[-1]
    if letter_1 != letter_2:
      return False
    else:
      new_word = string[1:-1]
      return is_palindrome(new_word)","String: ""racecar""",else,1,20
4189,Data Type,Can you design a function in Python which takes two string arguments and checks that two strings are anagrams or not?,"def is_anagram(str1, str2):
    if (len(str1) != len(str2)):
        return False ___ = sorted(list(str1)) 
    list2 = sorted(list(str2)) 
  
    for i in range(0, len(str1)): 
        if (list1[i] != list2[i]): 
            return False
  
    return True","s1 = ""restful""
s2 = ""fluster""",list1,1,20
4330,Data Type,Take an input string and write a python program to determine if it is a palindrome.,"def isPalindrome(s):
 left, right = 0, len(s) - 1
 while left < right:
 if s[left] != s[right]:
 return False ___ += 1
 right -= 1
 return True

s = ""racecar""
print(isPalindrome(s))  # True",racecar,left,1,20
4348,Data Type,Create a Python program to find out if a string contains any characters from another given string.,"def contains_chars(str1, str2):
 if any([c in str1 for c in str2]):
 return True ___ False

string1 = ""Hello""
string2 = ""eo""

print(contains_chars(string1, string2)) // Outputs: True","String 1: Hello
String 2: eo",return,1,20
4393,Data Type,Design an algorithm in Python to detect an anagram in a string.,"def isAnagram(string):
    for i in range(len(string)):
        for j in range(i + 1, len(string)):
            if sorted(string[i]) == sorted(string[j]):
                return True ___ False","Input string: ""eat tea""",return,1,20
4394,Data Type,Design a Python function to replace all occurrences of ‘x’ in a string with ‘y’.,"def replaceXWithY(str, x, y):
    while x in str:
        str = str.replace(x, y)
    return str ___ = replaceXWithY(""xx123xx456xx"", ""x"", ""y"")
print(result)","str = ""xx123xx456xx"", x = ""x"", y = ""y""",result,1,20
4423,Data Type,"Given the following code snippet, create a function in Python that takes two strings and returns true if one string is a substring of the other.","def is_substring(s1, s2):
 # check for empty strings 
 if s1 == '' or s2 == '':
 return False
 
 # check if s2 is a substring of s1
 if s1.find(s2) > -1:
 return True ___ False","s1 = 'Hello World'
s2 = 'World'",return,1,20
4437,Data Type,Detect the data type of a given string in Python.,str ___,"String: ""Hello World!""",type,1,20
4614,Data Type,Create a python program to test if a given string is a palindrome,"def is_palindrome(str):
    for i in range(len(str) // 2):
        if str[i] != str[-i - 1]:
            return False ___ True

# Test
result = is_palindrome(""level"")
print(result) # Output: True","str = ""level""",return,1,20
4658,Data Type,Write a Python function to check if a given string is an anagram or not.,"def is_anagram(str1, str2): 
    if len(str1) != len(str2): 
        return False ___ = sorted(str1.lower()) 
    str2 = sorted(str2.lower()) 
    return str1 == str2","str1 = ""listen"", str2 = ""silent""",str1,1,20
4686,Data Type,Create a function in Python that takes an input string and returns whether it is a palindrome.,"def isPalindrome(txt):
    i = 0
    j = len(txt) - 1
    
    while i < j:
        if txt[i] != txt[j]:
            return False ___ += 1
        j -= 1
    
    return True

print(isPalindrome(txt)) // True","txt = ""madam""",i,1,20
4770,Data Type,Implement a Python function that will take two strings and return true if the first string contains the second.,"def check_contains(query, word): 
    if query.find(word) != -1:
        return True ___ False

result = check_contains(query, word)","query = ""catering""
word = ""cat""",return,1,20
4939,Data Type,Optimize the following python code to search for a substring in a given string.,"def containsSubstring(str, sub):
    for i in range(len(str)-len(sub)+1):
        j = 0
        while j < len(sub) and sub[j] == str[i+j]:
            j += 1
        if j == len(sub):
            return True ___ False","String = “GeeksforGeeks”, Substring = “for”",return,1,20
4957,Data Type,Write a function in Python to check whether a given string is in lower case or not.,"def is_lowercase(string):
    for character in string:
        if character != character.lower():
            return False ___ True",String: ThisIsAnExample,return,1,20
5095,Data Type,"Create a function in Python to convert a hexadecimal string (e.g. ""0xBA"") to a binary string (e.g. ""10111010"").","def hex_to_binary(hex_str):
    # convert hex to int ___ = int(hex_str, 16)
    # convert int to binary string
    bin_str = bin(num)[2:]
    
    return bin_str

print(hex_to_binary(""0xA2""))
# Output: ""10100010""","""0xA2""",num,1,20
5356,Data Type,"Write a Python function that takes a string, checks if it is a palindrome and returns true or false.","def is_palindrome(string):
    rev_string = string[::-1]
    if string == rev_string:
        return True ___:
        return False 

print(is_palindrome(""level""))","""level""",else,1,20
5504,Data Type,Create a python script to identify if a given string is a valid IPv4 address or not.,"def is_valid_ipv4(ip):
    parts = ip.split('.')
    if len(parts) != 4:
        return False ___ part in parts:
        if not part.isdigit():
            return False
        if int(part) < 0 or int(part) > 255:
            return False
    return True

print(is_valid_ipv4('192.168.25.688'))

Output: False",String: 192.168.25.688,for,1,20
5603,Data Type,"Using a dictionary, write a program in Python to categorize each list item into a group of the same type.","def categorize(items):
    groups = {
        'numbers': [],
        'strings': []
    }
    for item in items:
        if type(item) == int ___ type(item) == float:
            groups['numbers'].append(item)
        else:
            groups['strings'].append(item)
    return groups","items = [1, 2, ‘a’, ‘b’, 4, 5, ‘c’, ‘d’, 7, 8]",or,1,20
5613,Data Type,Make a program to search for a given string in a list of strings.,"def search_string(search_string, list_of_strings):
    for string in list_of_strings:
        if string == search_string:
            return True ___ False

result = search_string('python', ['java', 'javascript', 'python', 'ruby']) 
print(result)","search_string = 'python'
list_of_strings = ['java', 'javascript', 'python', 'ruby']",return,1,20
5670,Data Type,"Use Python to check whether a given string is a palindrome (e.g. ""abccba"" is a palindrome).","def isPalindrome(string):
 if string == string[::-1]: # Check if string is the same backwards
return True ___:
 return False

isPalindrome('abcba') # Output: True",abcba,else,1,20
5686,Data Type,Write a Python function to check if a given substring is contained in a string.,"def check_substring(String, SubString):
    if SubString in String : 
        return True ___: 
        return False","String = ""This is an example""
SubString = ""ex""",else,1,20
6110,Data Type,Generate code to identify the type of data stored in a given variable in Python.,"# Identify the type ___ data stored in given variable

def identify_data_type(val):
    for item in val:
        data_type = type(item).__name__
        print(f""Data type of {item} is {data_type}"")

val1 = [""Hello"", 10, 3.14] 
identify_data_type(val1)

# Output
# Data type of Hello is str
# Data type of 10 is int
# Data type of 3.14 is float","val1 = [""Hello"", 10, 3.14]",of,1,20
6200,Data Type,Write a function in Python to search for a character in a given string.,"def serach_char(input_str, char):
  for char in input_str:
    if char == input_char:
      return True ___ False","String: “Hello”
Character: ‘l’",return,1,20
6240,Data Type,Create a Python script that checks whether a given string is a palindrome.,"def isPalindrome(str): 
    # Run loop from 0 to len/2 
    for i in range(0, len(str)//2): 
        if str[i] != str[len(str)-i-1]: 
            return False ___ True
  
# main
myStr = ""malayalam""

ans = isPalindrome(myStr) 
  
if ans: 
    print(""The given string is a palindrome"") 
else: 
    print(""The given string isn't a palindrome"")","""malayalam""",return,1,20
6413,Data Type,Create a python code to check if all characters are unique in a given string,"def is_unique(string):
    chars = set()
    for char in string:
        if char in chars:
            return False ___:
            chars.add(char)
    return True

print(is_unique(string))",string = 'abcdefeb',else,1,20
6504,Data Type,Generate a python program to check if the string is a palindrome or not.,"def is_palindrom(string):
    reverse_string = string[::-1]
    if string == reverse_string:
        return True ___:
        return False","string = ""madam""",else,1,20
6550,Data Type,Write a Python program to detect if a given string contains any of the given keywords.,"def keyword_detector(string, keywords):
 for i in keywords:
 if i in string:
 return True ___ False

print(keyword_detector(""I love ice cream"", [""chocolate"", ""vanilla""]))","String: I love ice cream
Keywords: [""chocolate"", ""vanilla""]",return,1,20
6551,Data Type,Create an algorithm in Python to check if a given string contains valid parentheses.,"def isValid(s):
    stack = []
    dict = {""]"":""["", ""}"":""{"", "")"":""(""}
    for char in s:
        if char in dict.values():
            stack.append(char)
        elif char in dict.keys():
            if stack == [] or dict[char] != stack.pop():
                return False ___:
            return False
    return stack == []

print(isValid('[[{{}}]]'))","""[[{{}}]]""",else,1,20
6596,Data Type,Create a Python program that takes a string and indicates whether it is a palindrome or not.,"def is_palindrome(s):
  s = s.lower()
  left = 0
  right = len(s) - 1
  
  while left < right:
    if s[left] != s[right]:
      return False ___ += 1
    right -= 1
  return True
  
print(is_palindrome(""racecar""))","""racecar""",left,1,20
6727,Data Type,Please construct a function in Python that constructs and returns a dictionary containing all unique characters in a given string.,"def unique_characters(string):
    unique_chars = {}
    for char in string:
        if char in unique_chars:
            continue
        else:
            unique_chars[char] = True ___ unique_chars

result = unique_characters('missisippi')
print(result) # Output: {'m': True, 'i': True, 's': True, 'p': True}","Example String: ""missisippi""",return,1,20
6789,Data Type,Create a Python function that takes two strings and checks if the second string is a substring of the first.,"def check_substring(string1, string2):
    if string2 in string1:
        return True ___:
        return False

# example
result = check_substring(""Hello world!"", ""world"")
print(result)","string1 = ""Hello world!""
string2 = ""world""",else,1,20
6986,Data Type,Create a program to detect a palindrome string in Python.,"# Function to check if a string is a palindrome
def is_palindrome(original_string):  
    reversed_string = original_string[::-1]  
    if original_string == reversed_string:
        return True ___:
        return False  
  
# Print result
print(is_palindrome(original_string))","original_string = ""radar""",else,1,20
7154,Data Type,"Write a Python program to accept user input as a string and check if the user input is a palindrome (a word, phrase, or sequence that reads the same backward as forward).","input_word = input(""Enter a word: "")

def is_palindrome(word):
 word = word.lower()
 reversed_word = word[::-1]

 if reversed_word == word:
 return True ___:
 return False

print(is_palindrome(input_word))
# Output: True","""radar""",else,1,20
7285,Data Type,Design a program in Python that takes a string as an input and checks whether all the vowels are present in the string or not.,"def check_vowels(string):
    vowels = ['a','e','i','o','u']
    for vowel in vowels:
        if vowel not in string:
            return False ___ True

print(check_vowels('This is a test'))",This is a test,return,1,20
7316,Data Type,Identify the type of an expression in Python.,The expression x is of type ___.,"x = ""Apple""",string,1,20
7432,Data Type,Develop a Python algorithm to validate a given palindrome string.,"def isPalindrome(s):
    i = 0
    j = len(s) - 1
    while i < j:
        if s[i] != s[j]:
            return False ___ += 1
        j -= 1
    return True
  
# Driver code 
s = ""level""
  
if isPalindrome(s):
    print(""Yes"")
else:
    print(""No"")","""level""",i,1,20
7503,Data Type,Build an algorithm in Python to check if a string is a palindrome.,"def is_palindrome(str):
    # Get the length of the string
    n = len(str)

    for i in range(n//2):
        # Compare characters from both ends
        if str[i] != str[n-i-1]:
            return False ___ True

str = ""abccba""
print(is_palindrome(str))","""abccba""",return,1,20
